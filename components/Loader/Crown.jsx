/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 crown.glb --transform 
Files: crown.glb [9.88MB] > C:\Users\DELL\Downloads\crown-transformed.glb [518.96KB] (95%)
*/

import { Canvas } from "@react-three/fiber";
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import {Center, OrbitControls, AccumulativeShadows, RandomizedLight, MeshRefractionMaterial, useEnvironment, Environment } from '@react-three/drei'


export function Crown(props) {
  const { nodes, materials } = useGLTF('/crown-transformed.glb')
  return (
    <div>
      <Canvas shadows dpr={[1, 1.5]} gl={{ antialias: false }} camera={{ position: [-5, 5, 12], fov: 20 }} style={{height:"100vh"}}>
        console.time('donuts')  
        <ambientLight intensity={1} color={0xffffff} castShadow />
        <directionalLight position={[0, 0, 5]} color="white" />
        <group {...props} dispose={null}>
          <mesh geometry={nodes.ironCrown001.geometry} material={materials['None.001']} rotation={[Math.PI / 2, 0, 0]} />
        </group>
        <OrbitControls enablePan={false} minPolarAngle={0} maxPolarAngle={Math.PI / 2.25} />
        {/* <script> */}
          console.timeEnd('donuts')
        {/* </script> */}
      </Canvas>
    </div>
  )
}

useGLTF.preload('/crown-transformed.glb')
